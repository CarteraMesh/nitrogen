permissions:
  contents: read
env:
  RPC_URL: ${{ secrets.RPC_URL }}
  TEST_PRIVATE_KEY: ${{ secrets.TEST_PRIVATE_KEY }}
  RUST_LOG: info
on:
  push:
    branches: [main]
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
name: test
jobs:
  generate:
    runs-on: ${{ vars.RUNNER }}
    name: generate code
    steps:
      - uses: actions/checkout@v5
      - uses: ubicloud/rust-cache@v2
        with:
          cache-on-failure: "true"
          cache-all-crates: "true"
          cache-workspace-crates: "true"
          workspaces: |
            . -> target
          cache-bin: "true"
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: nitrogen-cli
        run: |
          ./scripts/gen.sh
  os-check:
    # run cargo test on mac and windows
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / stable
    if: false
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo build
        run: cargo build --locked --all-targets
  coverage:
    runs-on: ${{ vars.RUNNER }}
    name: ubuntu / stable / coverage
    steps:
      - uses: actions/checkout@v5
      - uses: ubicloud/rust-cache@v2
        with:
          cache-on-failure: "true"
          cache-all-crates: "true"
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: nitrogen-instruction-builder (async)
        run: |
          cargo llvm-cov --package nitrogen-instruction-builder --lcov --output-path lcov-instruction-builder-async.info
      - name: nitrogen-instruction-builder (blocking)
        if: false
        run: |
          cargo llvm-cov --package nitrogen-instruction-builder --features blocking --lcov --output-path lcov-instruction-builder-blocking.info
      - name: Record Rust version
        run: echo "RUST=$(rustc --version)" >> "$GITHUB_ENV"
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov-instruction-builder-async.info
          #          files: lcov-instruction-builder-async.info,lcov-instruction-builder-blocking.info
          flags: nitrogen-instruction-builder
          env_vars: OS,RUST
