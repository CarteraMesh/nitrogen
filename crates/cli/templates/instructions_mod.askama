{%- for instruction in instructions %}
pub mod {{ instruction.module_name }};
{%- endfor %}

#[derive(serde::Serialize, serde::Deserialize, PartialEq, Eq, Debug, Clone, Hash)]
pub enum {{ program_instruction_enum }} {
    {%- for instruction in instructions %}
    {{ instruction.struct_name }}({{ instruction.module_name }}::{{ instruction.struct_name }}),
    {%- endfor %}
}

{%- for instruction in instructions %}
{%- if instruction.args.len() > 0 %}

pub fn {{ instruction.module_name }}(params: crate::types::{{ instruction.args[0].rust_type }}) -> {{ instruction.module_name }}::{{ instruction.struct_name }} {
    {{ instruction.module_name }}::{{ instruction.struct_name }} {params }
}
{%- else %}
pub fn {{ instruction.module_name }}() -> {{ instruction.module_name }}::{{ instruction.struct_name }} {
    {{ instruction.module_name }}::{{ instruction.struct_name }} { }
}
{%- endif %}
{%- endfor %}
